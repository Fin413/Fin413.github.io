{"version":3,"sources":["components/Video.js","components/LiveVideo.js","components/UpcomingVideos.js","components/Popup.js","App.js","reportWebVitals.js","index.js"],"names":["Video","title","videoEmbed","videoParams","substring","indexOf","className","src","frameBorder","width","height","allowFullScreen","LiveVideo","liveVid","data","i","length","isLive","embed","badges","live","streaming","isArchived","archived","undefined","name","html","videos","push","map","video","Popup","useState","pos","setPos","useEffect","setTimeout","bottom","opacity","style","onClick","el","visibility","App","setVideos","isLoaded","setIsLoaded","error","setError","getContent","type","UpcomingVideos","fetch","method","headers","then","res","json","result","Object","values","marginTop","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e74392ea.chunk.js","sourcesContent":["const Video = ({ title, videoEmbed }) => {\n    if(videoEmbed === null) return (<></>);\n\n    let videoParams = videoEmbed.substring(videoEmbed.indexOf(\"https://player.vimeo.com/video/\") + 31);\n    videoParams = videoParams.substring(0, videoParams.indexOf(\"\\\"\"));\n\n    return(\n        <div className=\"videoWrapper\">\n            <iframe className=\"video\" title={title} src={`https://player.vimeo.com/video/${videoParams}`} frameBorder=\"0\" width=\"100%\" height=\"100%\" allowFullScreen></iframe>\n        </div>\n    );\n}\n\nexport default Video","import Video from \"./Video\";\n\nconst LiveVideo = ({ data }) => {\n    // only gets one stream (lastest one posted)\n    // ask if he ever needs to display mutiple\n\n    // also ask if he wants the thing as a popup\n\n    let liveVid;\n\n    for(let i = 0; i < data.length; i ++){\n        let isLive = data[i].embed.badges.live.streaming;\n        let isArchived = data[i].embed.badges.live.archived;\n\n        if(isLive && !isArchived){\n            liveVid = data[i];\n            break;\n        }\n    }\n\n    if(liveVid === undefined){\n        return <h2 className=\"lightText\">No live videos</h2>;\n    }else{\n        return <Video title={liveVid.name} videoEmbed={liveVid.embed.html}/>;\n    }\n}\n\nexport default LiveVideo;","import Video from \"./Video\";\n\nconst LiveVideo = ({ data }) => {\n\n    let videos = [];\n\n    // Bondar posts the videos in reverse order so the loop is backwards\n\n    for(let i = data.length - 1; i > 0; i --){\n        let isLive = data[i].embed.badges.live.streaming;\n        let isArchived = data[i].embed.badges.live.archived;\n\n        if(!isLive && !isArchived) videos.push(data[i]);\n    }\n\n    if(videos.length === 0){\n        return <h2 className=\"lightText\">No upcoming streams</h2>;\n    }else{\n        return (\n            <div className=\"videoGrid\">\n                {videos.map((video, i) => (\n                    <Video key={i} title={video.name} videoEmbed={video.embed.html}/>\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default LiveVideo;","import { useState, useEffect } from \"react\";\n\nconst Popup = ({ data }) => {\n    const [pos, setPos] = useState({});\n\n    useEffect(()=>{\n        setTimeout(()=>{\n            setPos({ bottom: 0, opacity: 1});\n        }, 1000);\n    },[])\n\n    function hideMessage(el){\n        setPos({ bottom: \"-500px\", opacity: 0, visibility: \"hidden\" });\n    }\n\n    return (\n        <div style={pos} className=\"popupContainer\">\n            <p className=\"popupText\">Please note that all the extra-curricular games in this gym are public events. Neither Strathcona High School nor Metro Athletics can control who is watching or recording the events; therefore, it is incumbent on all schools, coaches, parents, and athletes to know that the events in this gym may be live-streamed.</p>\n            <button className=\"xBtn\" onClick={ hideMessage }>+</button>\n        </div>\n    );\n}\n\nexport default Popup;","import './App.css';\nimport { useEffect, useState } from 'react';\nimport LiveVideo from './components/LiveVideo';\nimport UpcomingVideos from './components/UpcomingVideos';\nimport Popup from './components/Popup';\n\nconst token = \"5d5c157df9f684e811d74a303341da43\";\nconst sconaChannelId = \"82197283\";\n\nfunction App() {\n\tconst [videos, setVideos] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [error, setError] = useState(null);\n\n\tuseEffect(() => {\n\t\tfetch(`https://api.vimeo.com/users/${sconaChannelId}/videos?filter=live`, {\n            method:'GET', \n            headers: {'Authorization': 'Bearer ' + token}\n        })\n        .then(res => res.json())\n        .then(\n            (result) => {\n                setVideos(result.data);\n\t\t\t\tsetIsLoaded(true);\n            },\n            (error) => {\n                setIsLoaded(true);\n                setError(Object.values(error));\n            }    \n        )\n\t}, [])\n\n\tfunction getContent(type){\n\t\tif(error){\n            return <p className=\"lightText\">Error: {error}</p>;\n        } else if(!isLoaded){\n            return <p className=\"lightText\">Loading...</p>;\n        } else if(type === \"live\"){\n            return <LiveVideo data={videos}/>;\n        } else if(type === \"upcoming\"){\n\t\t\treturn <UpcomingVideos data={videos}/>;\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h1 className=\"title notSelectable\">\n\t\t\t\tScona <span className=\"live\">&nbsp;LIVE&nbsp;<span className=\"circle\"></span>&nbsp;</span>\n\t\t\t</h1>\n\t\t\t{ getContent(\"live\") }\n\n\t\t\t<h1 style={{marginTop:\"75px\"}} className=\"subtitle\">Upcoming Streams</h1>\n\t\t\t{ getContent(\"upcoming\") }\n\n\t\t\t{/* <hr/> */}\n\n\t\t\t<div className=\"archived\">\n\t\t\t\t<h1 className=\"subtitle\">Archived Videos</h1>\n\t\t\t\t<p className=\"lightText\" style={{marginTop:\"-15px\"}}>This year's archived videos will be available at the end of the season to view and download.</p>\n\t\t\t\t<p className=\"tinyTitle\">Volleyball: &nbsp; <a href=\"https://vimeo.com/showcase/vb\">2020</a> &nbsp; <a href=\"https://vimeo.com/showcase/7979544\">2019</a></p>\n\t\t\t\t<p className=\"tinyTitle\">Basketball: &nbsp; <a href=\"https://vimeo.com/showcase/7975600\">2020</a> &nbsp; <a href=\"https://vimeo.com/showcase/7975600\">2019</a> &nbsp; <a href=\"https://vimeo.com/showcase/7979553\">2018</a></p>\n\t\t\t</div>\n\t\t\t\n\t\t\t<Popup/>\n\n\t\t\t<p className=\"footer\">Â© Strathcona High School 2021 - Created by Finlay Soehn</p>\n\t\t</>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}