{"version":3,"sources":["components/CheckSection.js","angryDubyk.png","sax.png","dubie.jpeg","dubykHead.png","App.js","reportWebVitals.js","index.js"],"names":["CheckSection","title","checkArray","updateArray","className","map","el","i","size","checked","onChange","clickedBox","label","forEach","icon","style","display","flex","backgroundColor","alignSelf","justifyContent","alignItems","labelStyle","userSelect","borderColor","borderRadius","marginRight","containerStyle","cursor","margin","App","useState","playText","setPlayText","JSON","parse","window","localStorage","getItem","data","setData","transition","useRef","btn","scales","setScales","exercises","setExercises","console","log","tempScales","tempExercises","scale","exercise","e","onbeforeunload","setItem","stringify","ref","onClick","tempKeys","length","push","randExercise","Math","floor","random","current","setTimeout","width","src","SpinnyDubyk","alt","Dubyk","Sax","newScales","newExercises","DubykHead","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0307c8bd.chunk.js","sourcesContent":["import Checkbox from 'react-custom-checkbox';\n\n\nconst CheckSection = ({ title, checkArray, updateArray }) => {\n    \n    function handleCheckbox(clickedBox){\n        checkArray.forEach((el) => {\n            if(el.label === clickedBox) el.checked = !el.checked;\n        })\n\n        updateArray(checkArray);\n    }\n\n    return(\n        <div className=\"checkContainer\">\n            <h1>{ title }</h1>\n            <hr/>\n\t\t\t<div className=\"checkBoxGrid\">\n\t\t\t\t{ checkArray.map((el, i) => \n                    <Checkbox \n                        key={i} \n                        size={18}\n                        checked={el.checked} \n                        onChange={() => handleCheckbox(el.label)} \n                        icon={\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    flex: 1,\n                                    backgroundColor: \"#2274F5\",\n                                    alignSelf: \"stretch\",\n                                    justifyContent:\"center\",\n                                    alignItems:\"center\"\n                                }}\n                            >\n                                <span className=\"check\"/>\n                            </div>\n                        }\n                        label={el.label}\n                        labelStyle={{userSelect: \"none\"}}\n                        borderColor=\"#2274F5\"\n                        borderRadius={3}\n                        style={{\n                            backgroundColor:\"transparent\", \n                            marginRight: \"8px\",\n                        }}\n                        containerStyle={{\n                            cursor: \"pointer\",\n                            margin: \"10px\",\n                        }}\n                    /> \n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default CheckSection;","export default __webpack_public_path__ + \"static/media/angryDubyk.e9c60ca6.png\";","export default __webpack_public_path__ + \"static/media/sax.90a47eef.png\";","export default __webpack_public_path__ + \"static/media/dubie.0c0fa6d8.jpeg\";","export default __webpack_public_path__ + \"static/media/dubykHead.06c96119.png\";","import './App.css';\nimport { useRef, useState } from 'react';\nimport CheckSection from './components/CheckSection';\nimport Dubyk from './angryDubyk.png';\nimport Sax from './sax.png';\nimport SpinnyDubyk from './dubie.jpeg';\nimport DubykHead from './dubykHead.png';\n\nfunction App() {\n\tconst [playText, setPlayText] = useState([\"Concert Bb\", \"Major Scale\"]);\n\tconst [data, setData] = useState(JSON.parse(window.localStorage.getItem(\"scaleData\")));\n\tconst transition = useRef(null);\n\tconst btn = useRef(null);\n\n\tconst [scales, setScales] = useState([\n\t\t{label: \"Concert Bb\", checked: true},\n\t\t{label: \"Concert Eb\", checked: true},\n\t\t{label: \"Concert Ab\", checked: true},\n\t\t{label: \"Concert Db\", checked: true},\n\t\t{label: \"Concert Gb\", checked: true},\n\t\t{label: \"Concert B\", checked: true},\n\t\t{label: \"Concert E\", checked: true},\n\t]);\n\n\tconst [exercises, setExercises] = useState([\n\t\t{label: \"Major Scale\", checked: true},\n\t\t{label: \"Minor Scale\", checked: true},\n\t\t{label: \"Chromatic\", checked: true},\n\t\t{label: \"Arpeggio\", checked: true},\n\t\t{label: \"Thirds\", checked: true},\n\t\t{label: \"Fourths\", checked: true},\n\t\t{label: \"Fifths\", checked: true},\n\t\t{label: \"Forms 1-4\", checked: true},\n\t]);\n\n\tif(data !== null){\n\t\t// technically only need to store checked \n\t\t// but I rolled out the shit already and changing it now would\n\t\t// break it for people already using it\n\t\tconsole.log(data);\n\t\tlet tempScales = scales;\n\t\tlet tempExercises = exercises;\n\n\t\ttry{\n\t\t\ttempScales.forEach((scale, i) => {\n\t\t\t\tscale.checked = data[0][i].checked;\n\t\t\t});\n\t\n\t\t\ttempExercises.forEach((exercise, i) => {\n\t\t\t\texercise.checked = data[1][i].checked;\n\t\t\t});\n\n\t\t}catch(e){\n\t\t\tconsole.log(e);\n\t\t}\n\t\t\n\t\tsetData(null);\n\t}\n\n\twindow.onbeforeunload = () => {\n\t\twindow.localStorage.setItem(\"scaleData\", JSON.stringify([scales, exercises]));\n\t}\n\n\tfunction selectRandom(){\n\t\tlet tempKeys = [];\n\t\tlet tempExercises = [];\n\n\t\tfor(let i = 0; i < scales.length; i++){\n\t\t\tif(scales[i].checked) tempKeys.push(scales[i].label);\n\t\t\tif(i === scales.length - 1 && tempKeys.length === 0) tempKeys.push(\"Select Keys Below\");\n\t\t}\n\n\t\tfor(let i = 0; i < exercises.length; i++){\n\t\t\tif(exercises[i].checked) tempExercises.push(exercises[i].label);\n\t\t\tif(i === exercises.length - 1 && tempExercises.length === 0) tempExercises.push(\"Select Exercises Below\");\n\t\t}\n\n\t\tlet randExercise = Math.floor(Math.random() * tempExercises.length);\n\n\t\tswitch(tempExercises[randExercise]){\n\t\t\tcase \"Forms 1-4\":\n\t\t\t\ttempExercises = \"Form \" + (Math.floor(Math.random() * 4) + 1);\n\t\t\t\tbreak;\n\t\t\tcase \"Major Scale\":\n\t\t\t\ttempExercises = \"Major Scale with Arpeggio\";\n\t\t\t\tbreak;\n\t\t\tcase \"Chromatic\":\n\t\t\t\ttempExercises = \"Chromatic Scale\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttempExercises = tempExercises[randExercise];\n\t\t}\n\n\n\t\ttransition.current.style = \"-webkit-animation:transition 1.5s 1; -moz-animation:transition 1.5s 1; animation:transition 1.5s 1\";\n\t\tbtn.current.style = \"pointer-events: none;\";\n\t\tsetTimeout(()=>{\n\t\t\tsetPlayText([tempKeys[Math.floor(Math.random() * tempKeys.length)], tempExercises]);\n\t\t}, 750);\n\t\tsetTimeout(()=>{\n\t\t\ttransition.current.style = \"animation: none\";\n\t\t\tbtn.current.style = \"pointer-events: all;\";\n\t\t},1500);\n\t}\n\n\tfunction updateScales(newScales){\n\t\tsetScales(newScales);\n\t}\n\n\tfunction updateExercises(newExercises){\n\t\tsetExercises(newExercises);\n\t}\n\n    return (\n\t\t<div className=\"center\">\n\n\t\t\t<div className=\"main\">\n\t\t\t\t<div className=\"above\">\n\n\t\t\t\t\t<h1 className=\"key\">{ playText[0] }</h1>\n\t\t\t\t\t<h2>{ playText[1] }</h2>\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"checkboxGrid\">\n\t\t\t\t\t\t<button ref={btn} className=\"defaultBtn\" onClick={ selectRandom }>RANDOMIZE</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<img width=\"300\" src={SpinnyDubyk} ref={transition} className=\"spinnyDubyk\" alt=\"Jerrold Dubyk\"/>\n\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<img src={Dubyk} width=\"400\" className=\"dubyk\" alt=\"Jerrold Dubyk, highschool band teacher extraordinaire\"/>\n\t\t\t\t<img src={Sax} width=\"100\" className=\"sax\" alt=\"saxophone\"/>\n\n\t\t\t</div>\n\n\n\t\t\t\n\t\t\t{/* <Metronome/> */}\n\t\t\t<CheckSection title=\"Keys\" checkArray={scales} updateArray={ updateScales }/>\n\t\t\t<CheckSection title=\"Exercises\" checkArray={exercises} updateArray={ updateExercises }/>\n\t\t\t\n\t\t\t<div className=\"sneakyCont\">\n\t\t\t\t<img src={DubykHead} className=\"sneakyDubyk\" width=\"100\"/>\n\n\t\t\t</div>\n\t\t</div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}