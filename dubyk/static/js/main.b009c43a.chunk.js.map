{"version":3,"sources":["components/CheckBox.js","components/CheckSection.js","angryDubyk.png","sax.png","dubie.jpeg","App.js","reportWebVitals.js","index.js"],"names":["CheckBox","checked","text","onclick","className","type","defaultChecked","onClick","CheckSection","title","checkArray","updateArray","handleCheckbox","clickedBox","forEach","el","i","label","map","App","useState","playText","setPlayText","transition","useRef","btn","scales","setScales","exercises","setExercises","data","JSON","parse","window","localStorage","getItem","console","log","tempScales","tempExercises","scale","exercise","e","onbeforeunload","setItem","stringify","ref","tempKeys","length","push","randExercise","Math","floor","random","current","style","setTimeout","width","src","SpinnyDubyk","alt","Dubyk","Sax","newScales","newExercises","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b009c43a.chunk.js","sourcesContent":["const CheckBox = ({ checked, text, onclick }) => {\n    function handleClick(){\n        onclick(text);\n    }\n    \n    return(\n        <div className=\"checkbox\">\n            <input type=\"checkbox\" defaultChecked={checked} onClick={handleClick}/>\n            <label>{ text }</label>\n        </div>\n    );\n}\n\nexport default CheckBox;","import CheckBox from \"./CheckBox\";\n\nconst CheckSection = ({ title, checkArray, updateArray }) => {\n    \n    function handleCheckbox(clickedBox){\n        checkArray.forEach((el, i) => {\n            if(el.label === clickedBox) el.checked = !el.checked;\n        })\n\n        updateArray(checkArray);\n    }\n\n    return(\n        <div className=\"checkContainer\">\n            <h1>{ title }</h1>\n            <hr/>\n\t\t\t<div className=\"checkBoxGrid\">\n\t\t\t\t{ checkArray.map((el, i) => <CheckBox key={i} checked={el.checked} text={el.label} onclick={handleCheckbox}/> )}\n            </div>\n        </div>\n    );\n}\n\nexport default CheckSection;","export default __webpack_public_path__ + \"static/media/angryDubyk.e9c60ca6.png\";","export default __webpack_public_path__ + \"static/media/sax.90a47eef.png\";","export default __webpack_public_path__ + \"static/media/dubie.0c0fa6d8.jpeg\";","import './App.css';\nimport { useRef, useState } from 'react';\nimport CheckSection from './components/CheckSection';\nimport Dubyk from './angryDubyk.png';\nimport Sax from './sax.png';\nimport SpinnyDubyk from './dubie.jpeg';\n\nfunction App() {\n\tconst [playText, setPlayText] = useState([\"Concert Bb\", \"Major Scale\"]);\n\tconst transition = useRef(null);\n\tconst btn = useRef(null);\n\n\tconst [scales, setScales] = useState([\n\t\t{label: \"Concert Bb\", checked: true},\n\t\t{label: \"Concert Eb\", checked: true},\n\t\t{label: \"Concert Ab\", checked: true},\n\t\t{label: \"Concert Db\", checked: true},\n\t\t{label: \"Concert Gb\", checked: true},\n\t\t{label: \"Concert B\", checked: true},\n\t\t{label: \"Concert E\", checked: true},\n\t]);\n\n\tconst [exercises, setExercises] = useState([\n\t\t{label: \"Major Scale\", checked: true},\n\t\t{label: \"Minor Scale\", checked: true},\n\t\t{label: \"Chromatic\", checked: true},\n\t\t{label: \"Arpeggio\", checked: true},\n\t\t{label: \"Thirds\", checked: true},\n\t\t{label: \"Fourths\", checked: true},\n\t\t{label: \"Fifths\", checked: true},\n\t\t{label: \"Forms 1-4\", checked: true},\n\t]);\n\t\n\tlet data = JSON.parse(window.localStorage.getItem(\"scaleData\"));\n\n\tif(data !== null){\n\t\t// technically only need to store checked \n\t\t// but I rolled out the shit already and changing it now would\n\t\t// break it for people already using it\n\t\tconsole.log(data);\n\t\tlet tempScales = scales;\n\t\tlet tempExercises = exercises;\n\n\t\ttry{\n\t\t\ttempScales.forEach((scale, i) => {\n\t\t\t\tscale.checked = data[0][i].checked;\n\t\t\t});\n\t\n\t\t\ttempExercises.forEach((exercise, i) => {\n\t\t\t\texercise.checked = data[1][i].checked;\n\t\t\t});\n\n\t\t}catch(e){\n\t\t\tconsole.log(e);\n\t\t}\n\t\t\n\t}\n\n\twindow.onbeforeunload = () => {\n\t\twindow.localStorage.setItem(\"scaleData\", JSON.stringify([scales, exercises]));\n\t}\n\n\tfunction selectRandom(){\n\t\tlet tempKeys = [];\n\t\tlet tempExercises = [];\n\n\t\tfor(let i = 0; i < scales.length; i++){\n\t\t\tif(scales[i].checked) tempKeys.push(scales[i].label);\n\t\t\tif(i === scales.length - 1 && tempKeys.length === 0) tempKeys.push(\"Select Keys Below\");\n\t\t}\n\n\t\tfor(let i = 0; i < exercises.length; i++){\n\t\t\tif(exercises[i].checked) tempExercises.push(exercises[i].label);\n\t\t\tif(i === exercises.length - 1 && tempExercises.length === 0) tempExercises.push(\"Select Exercises Below\");\n\t\t}\n\n\t\tlet randExercise = Math.floor(Math.random() * tempExercises.length);\n\n\t\tswitch(tempExercises[randExercise]){\n\t\t\tcase \"Forms 1-4\":\n\t\t\t\ttempExercises = \"Form \" + (Math.floor(Math.random() * 4) + 1);\n\t\t\t\tbreak;\n\t\t\tcase \"Major Scale\":\n\t\t\t\ttempExercises = \"Major Scale with Arpeggio\";\n\t\t\t\tbreak;\n\t\t\tcase \"Chromatic\":\n\t\t\t\ttempExercises = \"Chromatic Scale\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttempExercises = tempExercises[randExercise];\n\t\t}\n\n\n\t\ttransition.current.style = \"-webkit-animation:transition 1.5s 1; -moz-animation:transition 1.5s 1; animation:transition 1.5s 1\";\n\t\tbtn.current.style = \"pointer-events: none;\";\n\t\tsetTimeout(()=>{\n\t\t\tsetPlayText([tempKeys[Math.floor(Math.random() * tempKeys.length)], tempExercises]);\n\t\t}, 750);\n\t\tsetTimeout(()=>{\n\t\t\ttransition.current.style = \"animation: none\";\n\t\t\tbtn.current.style = \"pointer-events: all;\";\n\t\t},1500);\n\t}\n\n\tfunction updateScales(newScales){\n\t\tsetScales(newScales);\n\t}\n\n\tfunction updateExercises(newExercises){\n\t\tsetExercises(newExercises);\n\t}\n\n    return (\n\t\t<div className=\"center\">\n\n\t\t\t{/* <h1 id=\"title\">Dubyks Scales!</h1> */}\n\n\t\t\t<div className=\"main\">\n\t\t\t\t<div className=\"above\">\n\n\t\t\t\t\t<h1 className=\"key\">{ playText[0] }</h1>\n\t\t\t\t\t<h2>{ playText[1] }</h2>\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"checkboxGrid\">\n\t\t\t\t\t\t<button ref={btn} className=\"defaultBtn\" onClick={ selectRandom }>RANDOMIZE</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<img width=\"300\" src={SpinnyDubyk} ref={transition} className=\"spinnyDubyk\" alt=\"Jerrold Dubyk\"/>\n\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<img src={Dubyk} width=\"400\" className=\"dubyk\" alt=\"Jerrold Dubyk, highschool band teacher extraordinaire\"/>\n\t\t\t\t<img src={Sax} width=\"100\" className=\"sax\" alt=\"saxophone\"/>\n\n\t\t\t</div>\n\n\n\t\t\t\n\t\t\t{/* <Metronome/> */}\n\t\t\t<CheckSection title=\"Keys\" checkArray={scales} updateArray={ updateScales }/>\n\t\t\t<CheckSection title=\"Exercises\" checkArray={exercises} updateArray={ updateExercises }/>\n\t\t\t\n\n\t\t</div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}